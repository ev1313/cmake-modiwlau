option(BUILD_CLANG "builds a target with the clang compiler" ON)
option(BUILD_GCC "builds a target with the gcc compiler" ON)

function(setup_cxx_target NAME)
  IF(BUILD_CLANG)
    set(CMAKE_C_COMPILER clang)
    set(CMAKE_CXX_COMPILER clang++)
    set_property(TARGET ${NAME} PROPERTY CXX_STANDARD 14)
    set_property(TARGET ${NAME} PROPERTY CXX_STANDARD_REQUIRED ON)
    target_compile_options(${NAME} PRIVATE -Wall -Wextra)
    target_compile_options(${NAME} PRIVATE $<$<CONFIG:DEBUG>:-ggdb -O2>)
    target_compile_options(${NAME} PRIVATE $<$<CONFIG:RELEASE>:-O3 -NDEBUG>)
  ENDIF(BUILD_CLANG)
  IF(BUILD_GCC)
    set(CMAKE_C_COMPILER gcc)
    set(CMAKE_CXX_COMPILER g++)
    set_property(TARGET ${NAME} PROPERTY CXX_STANDARD 14)
    set_property(TARGET ${NAME} PROPERTY CXX_STANDARD_REQUIRED ON)
    target_compile_options(${NAME} PRIVATE -Wall -Wextra)
    target_compile_options(${NAME} PRIVATE $<$<CONFIG:DEBUG>:-ggdb -O2>)
    target_compile_options(${NAME} PRIVATE $<$<CONFIG:RELEASE>:-O3 -NDEBUG>)
  ENDIF(BUILD_GCC)
endfunction(setup_cxx_target)

function(cxx_library NAME)
  setup_cxx_target(${NAME})
  add_library(${NAME})
endfunction(cxx_library)

function(cxx_executable NAME)
  setup_cxx_target(${NAME})
endfunction(cxx_executable)
